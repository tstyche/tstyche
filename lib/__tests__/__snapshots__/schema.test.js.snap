// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`schema.json invalid item of 'target' option must be of type string 1`] = `
[
  {
    "instancePath": "/target/0",
    "keyword": "type",
    "message": "must be string",
    "params": {
      "type": "string",
    },
    "schemaPath": "#/properties/target/items/type",
  },
]
`;

exports[`schema.json invalid item of 'target' option must be one of the allowed values 1`] = `
[
  {
    "instancePath": "/target/0",
    "keyword": "pattern",
    "message": "must match pattern "^([45]\\.[0-9](\\.[0-9])?)|beta|current|latest|next|rc$"",
    "params": {
      "pattern": "^([45]\\.[0-9](\\.[0-9])?)|beta|current|latest|next|rc$",
    },
    "schemaPath": "#/properties/target/items/pattern",
  },
]
`;

exports[`schema.json invalid item of 'testFileMatch' option must be of type string 1`] = `
[
  {
    "instancePath": "/testFileMatch/0",
    "keyword": "type",
    "message": "must be string",
    "params": {
      "type": "string",
    },
    "schemaPath": "#/properties/testFileMatch/items/type",
  },
]
`;

exports[`schema.json invalid items of 'target' option must NOT be identical 1`] = `
[
  {
    "instancePath": "/target",
    "keyword": "uniqueItems",
    "message": "must NOT have duplicate items (items ## 1 and 0 are identical)",
    "params": {
      "i": 0,
      "j": 1,
    },
    "schemaPath": "#/properties/target/uniqueItems",
  },
]
`;

exports[`schema.json invalid items of 'testFileMatch' option must NOT be identical 1`] = `
[
  {
    "instancePath": "/testFileMatch",
    "keyword": "uniqueItems",
    "message": "must NOT have duplicate items (items ## 1 and 0 are identical)",
    "params": {
      "i": 0,
      "j": 1,
    },
    "schemaPath": "#/properties/testFileMatch/uniqueItems",
  },
]
`;

exports[`schema.json invalid value of 'disableTestFileLookup' option must be of type boolean 1`] = `
[
  {
    "instancePath": "/disableTestFileLookup",
    "keyword": "type",
    "message": "must be boolean",
    "params": {
      "type": "boolean",
    },
    "schemaPath": "#/properties/disableTestFileLookup/type",
  },
]
`;

exports[`schema.json invalid value of 'failFast' option must be of type boolean 1`] = `
[
  {
    "instancePath": "/failFast",
    "keyword": "type",
    "message": "must be boolean",
    "params": {
      "type": "boolean",
    },
    "schemaPath": "#/properties/failFast/type",
  },
]
`;

exports[`schema.json invalid value of 'rootPath' option must be of type string 1`] = `
[
  {
    "instancePath": "/rootPath",
    "keyword": "type",
    "message": "must be string",
    "params": {
      "type": "string",
    },
    "schemaPath": "#/properties/rootPath/type",
  },
]
`;

exports[`schema.json invalid value of 'target' option must be of type Array 1`] = `
[
  {
    "instancePath": "/target",
    "keyword": "type",
    "message": "must be array",
    "params": {
      "type": "array",
    },
    "schemaPath": "#/properties/target/type",
  },
]
`;

exports[`schema.json invalid value of 'testFileMatch' option must be of type Array 1`] = `
[
  {
    "instancePath": "/testFileMatch",
    "keyword": "type",
    "message": "must be array",
    "params": {
      "type": "array",
    },
    "schemaPath": "#/properties/testFileMatch/type",
  },
]
`;
