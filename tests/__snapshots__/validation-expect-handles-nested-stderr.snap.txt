Error: 'describe()' cannot be nested within 'expect()'.

  2 | 
  3 | expect(() => {
  4 |   describe("cannot be nested", () => {
    |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  5 |     //
    | ~~~~~~
  6 |   });
    | ~~~~
  7 | 
  8 |   it("cannot be nested", () => {
  9 |     //

      at ./__typetests__/handles-nested.tst.ts:4:3

Error: 'it()' cannot be nested within 'expect()'.

   6 |   });
   7 | 
   8 |   it("cannot be nested", () => {
     |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   9 |     //
     | ~~~~~~
  10 |   });
     | ~~~~
  11 | 
  12 |   test("cannot be nested", () => {
  13 |     //

       at ./__typetests__/handles-nested.tst.ts:8:3

Error: 'test()' cannot be nested within 'expect()'.

  10 |   });
  11 | 
  12 |   test("cannot be nested", () => {
     |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  13 |     //
     | ~~~~~~
  14 |   });
     | ~~~~
  15 | 
  16 |   // can be nested!
  17 |   expect<number>().type.toBe<string>();

       at ./__typetests__/handles-nested.tst.ts:12:3

Error: Type 'number' is not identical to type 'string'.

  15 | 
  16 |   // can be nested!
  17 |   expect<number>().type.toBe<string>();
     |                              ~~~~~~
  18 | }).type.toBe<void>();
  19 | 

       at ./__typetests__/handles-nested.tst.ts:17:30 ❭ 

Error: Type '() => void' is not identical to type 'void'.

  16 |   // can be nested!
  17 |   expect<number>().type.toBe<string>();
  18 | }).type.toBe<void>();
     |              ~~~~
  19 | 

       at ./__typetests__/handles-nested.tst.ts:18:14

