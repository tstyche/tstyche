Error: Type '{ first?: string | undefined; }' is not assignable to type '{ first: string; }'.

  10 |     expect<{ first: string }>().type.toBeAssignableTo({ first: "Jane" });
  11 | 
  12 |     expect<{ first?: string }>().type.toBeAssignableTo({ first: "Jane" }); // fail
     |                                                        ~~~~~~~~~~~~~~~~~
  13 |   });
  14 | 
  15 |   test("is NOT assignable to type of the target expression", () => {

       at ./__typetests__/toBeAssignableTo.tst.ts:12:56 ❭ when source is a type ❭ is assignable to type of the target expression

Error: Type '{ first: string; }' is assignable to type '{ first: string; }'.

  18 |     expect<Names>().type.not.toBeAssignableTo({ middle: "O." });
  19 | 
  20 |     expect<{ first: string }>().type.not.toBeAssignableTo({ first: "Jane" }); // fail
     |                                                           ~~~~~~~~~~~~~~~~~
  21 |   });
  22 | 
  23 |   test("is assignable to the target type", () => {

       at ./__typetests__/toBeAssignableTo.tst.ts:20:59 ❭ when source is a type ❭ is NOT assignable to type of the target expression

Error: Type 'Names' is not assignable to type '{ middle: string; }'.

  25 |     expect<Names>().type.toBeAssignableTo<{ first: string; last?: string }>();
  26 | 
  27 |     expect<Names>().type.toBeAssignableTo<{ middle: string }>(); // fail
     |                                           ~~~~~~~~~~~~~~~~~~
  28 |   });
  29 | 
  30 |   test("is NOT assignable to the target type", () => {

       at ./__typetests__/toBeAssignableTo.tst.ts:27:43 ❭ when source is a type ❭ is assignable to the target type

Error: Type 'Names' is assignable to type '{ first: string; }'.

  33 |     expect<Names>().type.not.toBeAssignableTo<{ middle: string }>();
  34 | 
  35 |     expect<Names>().type.not.toBeAssignableTo<{ first: string }>(); // fail
     |                                               ~~~~~~~~~~~~~~~~~
  36 |   });
  37 | });
  38 | 

       at ./__typetests__/toBeAssignableTo.tst.ts:35:47 ❭ when source is a type ❭ is NOT assignable to the target type

Error: Type '{ first: string; last: string; }' is not assignable to type '{ first: string; }'.

  41 |     expect({ first: "Jane", last: "Swan" }).type.toBeAssignableTo({ first: "Rose", last: "Smith" });
  42 | 
  43 |     expect({ first: "Jane", last: "Swan" }).type.toBeAssignableTo({ first: "Rose" }); // fail
     |                                                                   ~~~~~~~~~~~~~~~~~
  44 |   });
  45 | 
  46 |   test("is NOT assignable to type of the target expression", () => {

       at ./__typetests__/toBeAssignableTo.tst.ts:43:67 ❭ when source is an expression ❭ is assignable to type of the target expression

Error: Type '{ first: string; }' is assignable to type '{ first: string; }'.

  47 |     expect({ first: "Jane", last: "Swan" }).type.not.toBeAssignableTo({ first: "Rose" });
  48 | 
  49 |     expect({ first: "Jane" }).type.not.toBeAssignableTo({ first: "Rose" }); // fail
     |                                                         ~~~~~~~~~~~~~~~~~
  50 |   });
  51 | 
  52 |   test("is assignable to the target type", () => {

       at ./__typetests__/toBeAssignableTo.tst.ts:49:57 ❭ when source is an expression ❭ is NOT assignable to type of the target expression

Error: Type '{ first: string; last: string; }' is not assignable to type '{ middle: string; }'.

  54 |     expect({ first: "Jane", last: "Swan" }).type.toBeAssignableTo<{ first: string; last?: string }>();
  55 | 
  56 |     expect({ first: "Jane", last: "Swan" }).type.toBeAssignableTo<{ middle: string }>(); // fail
     |                                                                   ~~~~~~~~~~~~~~~~~~
  57 |   });
  58 | 
  59 |   test("is NOT assignable to the target type", () => {

       at ./__typetests__/toBeAssignableTo.tst.ts:56:67 ❭ when source is an expression ❭ is assignable to the target type

Error: Type '{ first: string; }' is assignable to type '{ first: string; }'.

  60 |     expect({ first: "Jane", last: "Swan" }).type.not.toBeAssignableTo<{ middle: string }>();
  61 | 
  62 |     expect({ first: "Jane" }).type.not.toBeAssignableTo<{ first: string }>(); // fail
     |                                                         ~~~~~~~~~~~~~~~~~
  63 |   });
  64 | });
  65 | 

       at ./__typetests__/toBeAssignableTo.tst.ts:62:57 ❭ when source is an expression ❭ is NOT assignable to the target type

