Error: Expression type raised a type error.

   6 | test("expression raises a type error", () => {
   7 |   expect(one("pass")).type.toRaiseError();
   8 |   expect(one("fail")).type.not.toRaiseError();
     |                                ~~~~~~~~~~~~
   9 | });
  10 | 
  11 | test("expression does not raise a type error", () => {

       at ./__typetests__/toRaiseError.tst.ts:8:32 ❭ expression raises a type error

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

       6 | test("expression raises a type error", () => {
       7 |   expect(one("pass")).type.toRaiseError();
       8 |   expect(one("fail")).type.not.toRaiseError();
         |              ~~~~~~
       9 | });
      10 | 
      11 | test("expression does not raise a type error", () => {

           at ./__typetests__/toRaiseError.tst.ts:8:14

Error: Expression type did not raise a type error.

  11 | test("expression does not raise a type error", () => {
  12 |   expect(one()).type.not.toRaiseError();
  13 |   expect(one()).type.toRaiseError();
     |                      ~~~~~~~~~~~~
  14 | });
  15 | 
  16 | test("type expression raises a type error", () => {

       at ./__typetests__/toRaiseError.tst.ts:13:22 ❭ expression does not raise a type error

Error: Type raised a type error.

  16 | test("type expression raises a type error", () => {
  17 |   expect<One>().type.toRaiseError();
  18 |   expect<One>().type.not.toRaiseError();
     |                          ~~~~~~~~~~~~
  19 | });
  20 | 
  21 | test("type expression does not raise a type error", () => {

       at ./__typetests__/toRaiseError.tst.ts:18:26 ❭ type expression raises a type error

    The raised type error:

    Generic type 'One' requires 1 type argument(s). ts(2314)

      16 | test("type expression raises a type error", () => {
      17 |   expect<One>().type.toRaiseError();
      18 |   expect<One>().type.not.toRaiseError();
         |          ~~~
      19 | });
      20 | 
      21 | test("type expression does not raise a type error", () => {

           at ./__typetests__/toRaiseError.tst.ts:18:10

Error: Type did not raise a type error.

  21 | test("type expression does not raise a type error", () => {
  22 |   expect<One<string>>().type.not.toRaiseError();
  23 |   expect<One<string>>().type.toRaiseError();
     |                              ~~~~~~~~~~~~
  24 | });
  25 | 
  26 | test("expression raises multiple type errors", () => {

       at ./__typetests__/toRaiseError.tst.ts:23:30 ❭ type expression does not raise a type error

Error: Expression type raised 3 type errors.

  34 |     one("2");
  35 |     one("3");
  36 |   }).type.not.toRaiseError();
     |               ~~~~~~~~~~~~
  37 | });
  38 | 
  39 | test("expression raises a type error with matching message", () => {

       at ./__typetests__/toRaiseError.tst.ts:36:15 ❭ expression raises multiple type errors

    The raised type errors:

    Expected 0 arguments, but got 1. ts(2554)

      31 |   }).type.toRaiseError();
      32 |   expect(() => {
      33 |     one("1");
         |         ~~~
      34 |     one("2");
      35 |     one("3");
      36 |   }).type.not.toRaiseError();

           at ./__typetests__/toRaiseError.tst.ts:33:9

    Expected 0 arguments, but got 1. ts(2554)

      32 |   expect(() => {
      33 |     one("1");
      34 |     one("2");
         |         ~~~
      35 |     one("3");
      36 |   }).type.not.toRaiseError();
      37 | });

           at ./__typetests__/toRaiseError.tst.ts:34:9

    Expected 0 arguments, but got 1. ts(2554)

      33 |     one("1");
      34 |     one("2");
      35 |     one("3");
         |         ~~~
      36 |   }).type.not.toRaiseError();
      37 | });
      38 | 

           at ./__typetests__/toRaiseError.tst.ts:35:9

Error: Expression type raised a matching type error.

  39 | test("expression raises a type error with matching message", () => {
  40 |   expect(one("pass")).type.toRaiseError("Expected 0 arguments");
  41 |   expect(one("fail")).type.not.toRaiseError("Expected 0 arguments");
     |                                             ~~~~~~~~~~~~~~~~~~~~~~
  42 | });
  43 | 
  44 | test("expression raises a type error with matching message passed as a template literal", () => {

       at ./__typetests__/toRaiseError.tst.ts:41:45 ❭ expression raises a type error with matching message

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      39 | test("expression raises a type error with matching message", () => {
      40 |   expect(one("pass")).type.toRaiseError("Expected 0 arguments");
      41 |   expect(one("fail")).type.not.toRaiseError("Expected 0 arguments");
         |              ~~~~~~
      42 | });
      43 | 
      44 | test("expression raises a type error with matching message passed as a template literal", () => {

           at ./__typetests__/toRaiseError.tst.ts:41:14

Error: Expression type raised a matching type error.

  44 | test("expression raises a type error with matching message passed as a template literal", () => {
  45 |   expect(one("pass")).type.toRaiseError(`Expected 0 arguments`);
  46 |   expect(one("fail")).type.not.toRaiseError(`Expected 0 arguments`);
     |                                             ~~~~~~~~~~~~~~~~~~~~~~
  47 | });
  48 | 
  49 | test("expression raises type error with not matching message", () => {

       at ./__typetests__/toRaiseError.tst.ts:46:45 ❭ expression raises a type error with matching message passed as a template literal

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      44 | test("expression raises a type error with matching message passed as a template literal", () => {
      45 |   expect(one("pass")).type.toRaiseError(`Expected 0 arguments`);
      46 |   expect(one("fail")).type.not.toRaiseError(`Expected 0 arguments`);
         |              ~~~~~~
      47 | });
      48 | 
      49 | test("expression raises type error with not matching message", () => {

           at ./__typetests__/toRaiseError.tst.ts:46:14

Error: Expression type did not raise a matching type error.

  49 | test("expression raises type error with not matching message", () => {
  50 |   expect(one("pass")).type.not.toRaiseError("Expected 2 arguments");
  51 |   expect(one("fail")).type.toRaiseError("Expected 2 arguments");
     |                                         ~~~~~~~~~~~~~~~~~~~~~~
  52 | });
  53 | 
  54 | test("type expression raises a type error with matching message", () => {

       at ./__typetests__/toRaiseError.tst.ts:51:41 ❭ expression raises type error with not matching message

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      49 | test("expression raises type error with not matching message", () => {
      50 |   expect(one("pass")).type.not.toRaiseError("Expected 2 arguments");
      51 |   expect(one("fail")).type.toRaiseError("Expected 2 arguments");
         |              ~~~~~~
      52 | });
      53 | 
      54 | test("type expression raises a type error with matching message", () => {

           at ./__typetests__/toRaiseError.tst.ts:51:14

Error: Type raised a matching type error.

  54 | test("type expression raises a type error with matching message", () => {
  55 |   expect<One>().type.toRaiseError("requires 1 type argument");
  56 |   expect<One>().type.not.toRaiseError("requires 1 type argument");
     |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~
  57 | });
  58 | 
  59 | test("type expression raises a type error with matching message passed as a template literal", () => {

       at ./__typetests__/toRaiseError.tst.ts:56:39 ❭ type expression raises a type error with matching message

    The raised type error:

    Generic type 'One' requires 1 type argument(s). ts(2314)

      54 | test("type expression raises a type error with matching message", () => {
      55 |   expect<One>().type.toRaiseError("requires 1 type argument");
      56 |   expect<One>().type.not.toRaiseError("requires 1 type argument");
         |          ~~~
      57 | });
      58 | 
      59 | test("type expression raises a type error with matching message passed as a template literal", () => {

           at ./__typetests__/toRaiseError.tst.ts:56:10

Error: Type raised a matching type error.

  59 | test("type expression raises a type error with matching message passed as a template literal", () => {
  60 |   expect<One>().type.toRaiseError(`requires 1 type argument`);
  61 |   expect<One>().type.not.toRaiseError(`requires 1 type argument`);
     |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~
  62 | });
  63 | 
  64 | test("type expression raises a type error with not matching message", () => {

       at ./__typetests__/toRaiseError.tst.ts:61:39 ❭ type expression raises a type error with matching message passed as a template literal

    The raised type error:

    Generic type 'One' requires 1 type argument(s). ts(2314)

      59 | test("type expression raises a type error with matching message passed as a template literal", () => {
      60 |   expect<One>().type.toRaiseError(`requires 1 type argument`);
      61 |   expect<One>().type.not.toRaiseError(`requires 1 type argument`);
         |          ~~~
      62 | });
      63 | 
      64 | test("type expression raises a type error with not matching message", () => {

           at ./__typetests__/toRaiseError.tst.ts:61:10

Error: Type did not raise a matching type error.

  64 | test("type expression raises a type error with not matching message", () => {
  65 |   expect<One>().type.not.toRaiseError("requires type argument");
  66 |   expect<One>().type.toRaiseError("requires type argument");
     |                                   ~~~~~~~~~~~~~~~~~~~~~~~~
  67 | });
  68 | 
  69 | test("expression raises a type error with expected code", () => {

       at ./__typetests__/toRaiseError.tst.ts:66:35 ❭ type expression raises a type error with not matching message

    The raised type error:

    Generic type 'One' requires 1 type argument(s). ts(2314)

      64 | test("type expression raises a type error with not matching message", () => {
      65 |   expect<One>().type.not.toRaiseError("requires type argument");
      66 |   expect<One>().type.toRaiseError("requires type argument");
         |          ~~~
      67 | });
      68 | 
      69 | test("expression raises a type error with expected code", () => {

           at ./__typetests__/toRaiseError.tst.ts:66:10

Error: Expression type raised a matching type error.

  69 | test("expression raises a type error with expected code", () => {
  70 |   expect(one("pass")).type.toRaiseError(2554);
  71 |   expect(one("fail")).type.not.toRaiseError(2554);
     |                                             ~~~~
  72 | });
  73 | 
  74 | test("expression raises a type error with not expected code", () => {

       at ./__typetests__/toRaiseError.tst.ts:71:45 ❭ expression raises a type error with expected code

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      69 | test("expression raises a type error with expected code", () => {
      70 |   expect(one("pass")).type.toRaiseError(2554);
      71 |   expect(one("fail")).type.not.toRaiseError(2554);
         |              ~~~~~~
      72 | });
      73 | 
      74 | test("expression raises a type error with not expected code", () => {

           at ./__typetests__/toRaiseError.tst.ts:71:14

Error: Expression type did not raise a matching type error.

  74 | test("expression raises a type error with not expected code", () => {
  75 |   expect(one("pass")).type.not.toRaiseError(2544);
  76 |   expect(one("fail")).type.toRaiseError(2544);
     |                                         ~~~~
  77 | });
  78 | 
  79 | declare function two<T>(): void;

       at ./__typetests__/toRaiseError.tst.ts:76:41 ❭ expression raises a type error with not expected code

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      74 | test("expression raises a type error with not expected code", () => {
      75 |   expect(one("pass")).type.not.toRaiseError(2544);
      76 |   expect(one("fail")).type.toRaiseError(2544);
         |              ~~~~~~
      77 | });
      78 | 
      79 | declare function two<T>(): void;

           at ./__typetests__/toRaiseError.tst.ts:76:14

Error: Expression type raised a matching type error.

  93 |     two<string>("fail");
  94 |   }).type.not.toRaiseError(
  95 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
     |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  96 |     "Expected 0 arguments",
  97 |   );
  98 | });

       at ./__typetests__/toRaiseError.tst.ts:95:5 ❭ expression raises multiple type errors with matching messages

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      90 | 
      91 |   expect(() => {
      92 |     two(1000);
         |         ~~~~
      93 |     two<string>("fail");
      94 |   }).type.not.toRaiseError(
      95 |     "Argument of type 'number' is not assignable to parameter of type 'string'",

           at ./__typetests__/toRaiseError.tst.ts:92:9

Error: Expression type raised a matching type error.

  94 |   }).type.not.toRaiseError(
  95 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
  96 |     "Expected 0 arguments",
     |     ~~~~~~~~~~~~~~~~~~~~~~
  97 |   );
  98 | });
  99 | 

       at ./__typetests__/toRaiseError.tst.ts:96:5 ❭ expression raises multiple type errors with matching messages

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      91 |   expect(() => {
      92 |     two(1000);
      93 |     two<string>("fail");
         |                 ~~~~~~
      94 |   }).type.not.toRaiseError(
      95 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
      96 |     "Expected 0 arguments",

           at ./__typetests__/toRaiseError.tst.ts:93:17

Error: Expression type did not raise a matching type error.

  111 |     two<string>("fail");
  112 |   }).type.toRaiseError(
  113 |     "Expected 0 arguments",
      |     ~~~~~~~~~~~~~~~~~~~~~~
  114 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
  115 |   );
  116 | });

        at ./__typetests__/toRaiseError.tst.ts:113:5 ❭ expression raises multiple type errors with not matching messages

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      108 | 
      109 |   expect(() => {
      110 |     two(1000);
          |         ~~~~
      111 |     two<string>("fail");
      112 |   }).type.toRaiseError(
      113 |     "Expected 0 arguments",

            at ./__typetests__/toRaiseError.tst.ts:110:9

Error: Expression type did not raise a matching type error.

  112 |   }).type.toRaiseError(
  113 |     "Expected 0 arguments",
  114 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  115 |   );
  116 | });
  117 | 

        at ./__typetests__/toRaiseError.tst.ts:114:5 ❭ expression raises multiple type errors with not matching messages

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      109 |   expect(() => {
      110 |     two(1000);
      111 |     two<string>("fail");
          |                 ~~~~~~
      112 |   }).type.toRaiseError(
      113 |     "Expected 0 arguments",
      114 |     "Argument of type 'number' is not assignable to parameter of type 'string'",

            at ./__typetests__/toRaiseError.tst.ts:111:17

Error: Expression type raised a matching type error.

  125 |     two(1000);
  126 |     two<string>("fail");
  127 |   }).type.not.toRaiseError(2345, 2554);
      |                            ~~~~
  128 | });
  129 | 
  130 | test("expression raises multiple type errors with not expected codes", () => {

        at ./__typetests__/toRaiseError.tst.ts:127:28 ❭ expression raises multiple type errors with expected codes

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      123 | 
      124 |   expect(() => {
      125 |     two(1000);
          |         ~~~~
      126 |     two<string>("fail");
      127 |   }).type.not.toRaiseError(2345, 2554);
      128 | });

            at ./__typetests__/toRaiseError.tst.ts:125:9

Error: Expression type raised a matching type error.

  125 |     two(1000);
  126 |     two<string>("fail");
  127 |   }).type.not.toRaiseError(2345, 2554);
      |                                  ~~~~
  128 | });
  129 | 
  130 | test("expression raises multiple type errors with not expected codes", () => {

        at ./__typetests__/toRaiseError.tst.ts:127:34 ❭ expression raises multiple type errors with expected codes

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      124 |   expect(() => {
      125 |     two(1000);
      126 |     two<string>("fail");
          |                 ~~~~~~
      127 |   }).type.not.toRaiseError(2345, 2554);
      128 | });
      129 | 

            at ./__typetests__/toRaiseError.tst.ts:126:17

Error: Expression type did not raise a matching type error.

  132 |     two(1111);
  133 |     two<string>("pass");
  134 |   }).type.toRaiseError(2554, 2345);
      |                        ~~~~
  135 | 
  136 |   expect(() => {
  137 |     two(1000);

        at ./__typetests__/toRaiseError.tst.ts:134:24 ❭ expression raises multiple type errors with not expected codes

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      130 | test("expression raises multiple type errors with not expected codes", () => {
      131 |   expect(() => {
      132 |     two(1111);
          |         ~~~~
      133 |     two<string>("pass");
      134 |   }).type.toRaiseError(2554, 2345);
      135 | 

            at ./__typetests__/toRaiseError.tst.ts:132:9

Error: Expression type did not raise a matching type error.

  132 |     two(1111);
  133 |     two<string>("pass");
  134 |   }).type.toRaiseError(2554, 2345);
      |                              ~~~~
  135 | 
  136 |   expect(() => {
  137 |     two(1000);

        at ./__typetests__/toRaiseError.tst.ts:134:30 ❭ expression raises multiple type errors with not expected codes

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      131 |   expect(() => {
      132 |     two(1111);
      133 |     two<string>("pass");
          |                 ~~~~~~
      134 |   }).type.toRaiseError(2554, 2345);
      135 | 
      136 |   expect(() => {

            at ./__typetests__/toRaiseError.tst.ts:133:17

Error: Expression type raised a matching type error.

  149 |     two(1000);
  150 |     two<string>("fail");
  151 |   }).type.not.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'", 2554);
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 | });
  153 | 
  154 | test("expression raises multiple type errors with not matching messages and not expected codes", () => {

        at ./__typetests__/toRaiseError.tst.ts:151:28 ❭ expression raises multiple type errors with matching messages and expected codes

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      147 | 
      148 |   expect(() => {
      149 |     two(1000);
          |         ~~~~
      150 |     two<string>("fail");
      151 |   }).type.not.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'", 2554);
      152 | });

            at ./__typetests__/toRaiseError.tst.ts:149:9

Error: Expression type raised a matching type error.

  149 |     two(1000);
  150 |     two<string>("fail");
  151 |   }).type.not.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'", 2554);
      |                                                                                                         ~~~~
  152 | });
  153 | 
  154 | test("expression raises multiple type errors with not matching messages and not expected codes", () => {

        at ./__typetests__/toRaiseError.tst.ts:151:105 ❭ expression raises multiple type errors with matching messages and expected codes

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      148 |   expect(() => {
      149 |     two(1000);
      150 |     two<string>("fail");
          |                 ~~~~~~
      151 |   }).type.not.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'", 2554);
      152 | });
      153 | 

            at ./__typetests__/toRaiseError.tst.ts:150:17

Error: Expression type did not raise a matching type error.

  156 |     two(1111);
  157 |     two<string>("pass");
  158 |   }).type.toRaiseError(2554, "Argument of type 'number' is not assignable to parameter of type 'string'");
      |                        ~~~~
  159 | 
  160 |   expect(() => {
  161 |     two(1000);

        at ./__typetests__/toRaiseError.tst.ts:158:24 ❭ expression raises multiple type errors with not matching messages and not expected codes

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      154 | test("expression raises multiple type errors with not matching messages and not expected codes", () => {
      155 |   expect(() => {
      156 |     two(1111);
          |         ~~~~
      157 |     two<string>("pass");
      158 |   }).type.toRaiseError(2554, "Argument of type 'number' is not assignable to parameter of type 'string'");
      159 | 

            at ./__typetests__/toRaiseError.tst.ts:156:9

Error: Expression type did not raise a matching type error.

  156 |     two(1111);
  157 |     two<string>("pass");
  158 |   }).type.toRaiseError(2554, "Argument of type 'number' is not assignable to parameter of type 'string'");
      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 | 
  160 |   expect(() => {
  161 |     two(1000);

        at ./__typetests__/toRaiseError.tst.ts:158:30 ❭ expression raises multiple type errors with not matching messages and not expected codes

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      155 |   expect(() => {
      156 |     two(1111);
      157 |     two<string>("pass");
          |                 ~~~~~~
      158 |   }).type.toRaiseError(2554, "Argument of type 'number' is not assignable to parameter of type 'string'");
      159 | 
      160 |   expect(() => {

            at ./__typetests__/toRaiseError.tst.ts:157:17

Error: Expression type raised 2 type errors.

  168 |     two(1111);
  169 |     two<string>("pass");
  170 |   }).type.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'");
      |           ~~~~~~~~~~~~
  171 | });
  172 | 
  173 | test("expression raises more type errors than expected codes", () => {

        at ./__typetests__/toRaiseError.tst.ts:170:11 ❭ expression raises more type errors than expected messages

    The raised type errors:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      166 | test("expression raises more type errors than expected messages", () => {
      167 |   expect(() => {
      168 |     two(1111);
          |         ~~~~
      169 |     two<string>("pass");
      170 |   }).type.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'");
      171 | });

            at ./__typetests__/toRaiseError.tst.ts:168:9

    Expected 0 arguments, but got 1. ts(2554)

      167 |   expect(() => {
      168 |     two(1111);
      169 |     two<string>("pass");
          |                 ~~~~~~
      170 |   }).type.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'");
      171 | });
      172 | 

            at ./__typetests__/toRaiseError.tst.ts:169:17

Error: Expression type raised 2 type errors.

  175 |     two(1111);
  176 |     two<string>("pass");
  177 |   }).type.toRaiseError(2345);
      |           ~~~~~~~~~~~~
  178 | });
  179 | 
  180 | test("expression raises only one type error, but several messages are expected", () => {

        at ./__typetests__/toRaiseError.tst.ts:177:11 ❭ expression raises more type errors than expected codes

    The raised type errors:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      173 | test("expression raises more type errors than expected codes", () => {
      174 |   expect(() => {
      175 |     two(1111);
          |         ~~~~
      176 |     two<string>("pass");
      177 |   }).type.toRaiseError(2345);
      178 | });

            at ./__typetests__/toRaiseError.tst.ts:175:9

    Expected 0 arguments, but got 1. ts(2554)

      174 |   expect(() => {
      175 |     two(1111);
      176 |     two<string>("pass");
          |                 ~~~~~~
      177 |   }).type.toRaiseError(2345);
      178 | });
      179 | 

            at ./__typetests__/toRaiseError.tst.ts:176:17

Error: Expression type raised only 1 type error.

  181 |   expect(() => {
  182 |     two(1111);
  183 |   }).type.toRaiseError(
      |           ~~~~~~~~~~~~
  184 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
  185 |     "Expected 0 arguments",
  186 |     "Expected 2 arguments",

        at ./__typetests__/toRaiseError.tst.ts:183:11 ❭ expression raises only one type error, but several messages are expected

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      180 | test("expression raises only one type error, but several messages are expected", () => {
      181 |   expect(() => {
      182 |     two(1111);
          |         ~~~~
      183 |   }).type.toRaiseError(
      184 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
      185 |     "Expected 0 arguments",

            at ./__typetests__/toRaiseError.tst.ts:182:9

Error: Expression type raised only 2 type errors.

  192 |     two(1111);
  193 |     two<string>("pass");
  194 |   }).type.toRaiseError(
      |           ~~~~~~~~~~~~
  195 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
  196 |     "Expected 0 arguments",
  197 |     "Expected 2 arguments",

        at ./__typetests__/toRaiseError.tst.ts:194:11 ❭ expression raises less type errors than expected messages

    The raised type errors:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      190 | test("expression raises less type errors than expected messages", () => {
      191 |   expect(() => {
      192 |     two(1111);
          |         ~~~~
      193 |     two<string>("pass");
      194 |   }).type.toRaiseError(
      195 |     "Argument of type 'number' is not assignable to parameter of type 'string'",

            at ./__typetests__/toRaiseError.tst.ts:192:9

    Expected 0 arguments, but got 1. ts(2554)

      191 |   expect(() => {
      192 |     two(1111);
      193 |     two<string>("pass");
          |                 ~~~~~~
      194 |   }).type.toRaiseError(
      195 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
      196 |     "Expected 0 arguments",

            at ./__typetests__/toRaiseError.tst.ts:193:17

Error: Expression type raised only 1 type error.

  202 |   expect(() => {
  203 |     two<string>("pass");
  204 |   }).type.toRaiseError(2345, 2554, 2554);
      |           ~~~~~~~~~~~~
  205 | });
  206 | 
  207 | test("expression raises less type errors than expected codes", () => {

        at ./__typetests__/toRaiseError.tst.ts:204:11 ❭ expression raises only one type error, but several codes are expected

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      201 | test("expression raises only one type error, but several codes are expected", () => {
      202 |   expect(() => {
      203 |     two<string>("pass");
          |                 ~~~~~~
      204 |   }).type.toRaiseError(2345, 2554, 2554);
      205 | });
      206 | 

            at ./__typetests__/toRaiseError.tst.ts:203:17

Error: Expression type raised only 2 type errors.

  209 |     two(1111);
  210 |     two<string>("pass");
  211 |   }).type.toRaiseError(2345, 2554, 2554);
      |           ~~~~~~~~~~~~
  212 | });
  213 | 

        at ./__typetests__/toRaiseError.tst.ts:211:11 ❭ expression raises less type errors than expected codes

    The raised type errors:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      207 | test("expression raises less type errors than expected codes", () => {
      208 |   expect(() => {
      209 |     two(1111);
          |         ~~~~
      210 |     two<string>("pass");
      211 |   }).type.toRaiseError(2345, 2554, 2554);
      212 | });

            at ./__typetests__/toRaiseError.tst.ts:209:9

    Expected 0 arguments, but got 1. ts(2554)

      208 |   expect(() => {
      209 |     two(1111);
      210 |     two<string>("pass");
          |                 ~~~~~~
      211 |   }).type.toRaiseError(2345, 2554, 2554);
      212 | });
      213 | 

            at ./__typetests__/toRaiseError.tst.ts:210:17

