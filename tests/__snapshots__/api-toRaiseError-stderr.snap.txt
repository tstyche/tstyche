Error: Expression raised a type error.

   6 | test("expression raises a type error", () => {
   7 |   expect(one("pass")).type.toRaiseError();
>  8 |   expect(one("fail")).type.not.toRaiseError();
     |                                ^
   9 | });
  10 | 
  11 | test("expression does not raise a type error", () => {

       at ./__typetests__/toRaiseError.tst.ts:8:32 ❭ expression raises a type error

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

       6 | test("expression raises a type error", () => {
       7 |   expect(one("pass")).type.toRaiseError();
    >  8 |   expect(one("fail")).type.not.toRaiseError();
         |              ^
       9 | });
      10 | 
      11 | test("expression does not raise a type error", () => {

           at ./__typetests__/toRaiseError.tst.ts:8:14

Error: Expression did not raise a type error.

  11 | test("expression does not raise a type error", () => {
  12 |   expect(one()).type.not.toRaiseError();
> 13 |   expect(one()).type.toRaiseError();
     |                      ^
  14 | });
  15 | 
  16 | test("type expression raises a type error", () => {

       at ./__typetests__/toRaiseError.tst.ts:13:22 ❭ expression does not raise a type error

Error: Type expression raised a type error.

  16 | test("type expression raises a type error", () => {
  17 |   expect<One>().type.toRaiseError();
> 18 |   expect<One>().type.not.toRaiseError();
     |                          ^
  19 | });
  20 | 
  21 | test("type expression does not raise a type error", () => {

       at ./__typetests__/toRaiseError.tst.ts:18:26 ❭ type expression raises a type error

    The raised type error:

    Generic type 'One' requires 1 type argument(s). ts(2314)

      16 | test("type expression raises a type error", () => {
      17 |   expect<One>().type.toRaiseError();
    > 18 |   expect<One>().type.not.toRaiseError();
         |          ^
      19 | });
      20 | 
      21 | test("type expression does not raise a type error", () => {

           at ./__typetests__/toRaiseError.tst.ts:18:10

Error: Type expression did not raise a type error.

  21 | test("type expression does not raise a type error", () => {
  22 |   expect<One<string>>().type.not.toRaiseError();
> 23 |   expect<One<string>>().type.toRaiseError();
     |                              ^
  24 | });
  25 | 
  26 | test("expression raises multiple type errors", () => {

       at ./__typetests__/toRaiseError.tst.ts:23:30 ❭ type expression does not raise a type error

Error: Expression raised 3 type errors.

  34 |     one("2");
  35 |     one("3");
> 36 |   }).type.not.toRaiseError();
     |               ^
  37 | });
  38 | 
  39 | test("expression raises a type error with matching message", () => {

       at ./__typetests__/toRaiseError.tst.ts:36:15 ❭ expression raises multiple type errors

    The raised type errors:

    Expected 0 arguments, but got 1. ts(2554)

      31 |   }).type.toRaiseError();
      32 |   expect(() => {
    > 33 |     one("1");
         |         ^
      34 |     one("2");
      35 |     one("3");
      36 |   }).type.not.toRaiseError();

           at ./__typetests__/toRaiseError.tst.ts:33:9

    Expected 0 arguments, but got 1. ts(2554)

      32 |   expect(() => {
      33 |     one("1");
    > 34 |     one("2");
         |         ^
      35 |     one("3");
      36 |   }).type.not.toRaiseError();
      37 | });

           at ./__typetests__/toRaiseError.tst.ts:34:9

    Expected 0 arguments, but got 1. ts(2554)

      33 |     one("1");
      34 |     one("2");
    > 35 |     one("3");
         |         ^
      36 |   }).type.not.toRaiseError();
      37 | });
      38 | 

           at ./__typetests__/toRaiseError.tst.ts:35:9

Error: Expression raised a type error matching substring 'Expected 0 arguments'.

  39 | test("expression raises a type error with matching message", () => {
  40 |   expect(one("pass")).type.toRaiseError("Expected 0 arguments");
> 41 |   expect(one("fail")).type.not.toRaiseError("Expected 0 arguments");
     |                                ^
  42 | });
  43 | 
  44 | test("expression raises a type error with matching message passed as a template literal", () => {

       at ./__typetests__/toRaiseError.tst.ts:41:32 ❭ expression raises a type error with matching message

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      39 | test("expression raises a type error with matching message", () => {
      40 |   expect(one("pass")).type.toRaiseError("Expected 0 arguments");
    > 41 |   expect(one("fail")).type.not.toRaiseError("Expected 0 arguments");
         |              ^
      42 | });
      43 | 
      44 | test("expression raises a type error with matching message passed as a template literal", () => {

           at ./__typetests__/toRaiseError.tst.ts:41:14

Error: Expression raised a type error matching substring 'Expected 0 arguments'.

  46 |   expect(one("pass")).type.toRaiseError(`Expected 0 arguments`);
  47 |   // biome-ignore lint/style/noUnusedTemplateLiteral: testing purpose
> 48 |   expect(one("fail")).type.not.toRaiseError(`Expected 0 arguments`);
     |                                ^
  49 | });
  50 | 
  51 | test("expression raises type error with not matching message", () => {

       at ./__typetests__/toRaiseError.tst.ts:48:32 ❭ expression raises a type error with matching message passed as a template literal

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      46 |   expect(one("pass")).type.toRaiseError(`Expected 0 arguments`);
      47 |   // biome-ignore lint/style/noUnusedTemplateLiteral: testing purpose
    > 48 |   expect(one("fail")).type.not.toRaiseError(`Expected 0 arguments`);
         |              ^
      49 | });
      50 | 
      51 | test("expression raises type error with not matching message", () => {

           at ./__typetests__/toRaiseError.tst.ts:48:14

Error: Expression did not raise a type error matching substring 'Expected 2 arguments'.

  51 | test("expression raises type error with not matching message", () => {
  52 |   expect(one("pass")).type.not.toRaiseError("Expected 2 arguments");
> 53 |   expect(one("fail")).type.toRaiseError("Expected 2 arguments");
     |                            ^
  54 | });
  55 | 
  56 | test("type expression raises a type error with matching message", () => {

       at ./__typetests__/toRaiseError.tst.ts:53:28 ❭ expression raises type error with not matching message

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      51 | test("expression raises type error with not matching message", () => {
      52 |   expect(one("pass")).type.not.toRaiseError("Expected 2 arguments");
    > 53 |   expect(one("fail")).type.toRaiseError("Expected 2 arguments");
         |              ^
      54 | });
      55 | 
      56 | test("type expression raises a type error with matching message", () => {

           at ./__typetests__/toRaiseError.tst.ts:53:14

Error: Type expression raised a type error matching substring 'requires 1 type argument'.

  56 | test("type expression raises a type error with matching message", () => {
  57 |   expect<One>().type.toRaiseError("requires 1 type argument");
> 58 |   expect<One>().type.not.toRaiseError("requires 1 type argument");
     |                          ^
  59 | });
  60 | 
  61 | test("type expression raises a type error with matching message passed as a template literal", () => {

       at ./__typetests__/toRaiseError.tst.ts:58:26 ❭ type expression raises a type error with matching message

    The raised type error:

    Generic type 'One' requires 1 type argument(s). ts(2314)

      56 | test("type expression raises a type error with matching message", () => {
      57 |   expect<One>().type.toRaiseError("requires 1 type argument");
    > 58 |   expect<One>().type.not.toRaiseError("requires 1 type argument");
         |          ^
      59 | });
      60 | 
      61 | test("type expression raises a type error with matching message passed as a template literal", () => {

           at ./__typetests__/toRaiseError.tst.ts:58:10

Error: Type expression raised a type error matching substring 'requires 1 type argument'.

  63 |   expect<One>().type.toRaiseError(`requires 1 type argument`);
  64 |   // biome-ignore lint/style/noUnusedTemplateLiteral: testing purpose
> 65 |   expect<One>().type.not.toRaiseError(`requires 1 type argument`);
     |                          ^
  66 | });
  67 | 
  68 | test("type expression raises a type error with not matching message", () => {

       at ./__typetests__/toRaiseError.tst.ts:65:26 ❭ type expression raises a type error with matching message passed as a template literal

    The raised type error:

    Generic type 'One' requires 1 type argument(s). ts(2314)

      63 |   expect<One>().type.toRaiseError(`requires 1 type argument`);
      64 |   // biome-ignore lint/style/noUnusedTemplateLiteral: testing purpose
    > 65 |   expect<One>().type.not.toRaiseError(`requires 1 type argument`);
         |          ^
      66 | });
      67 | 
      68 | test("type expression raises a type error with not matching message", () => {

           at ./__typetests__/toRaiseError.tst.ts:65:10

Error: Type expression did not raise a type error matching substring 'requires type argument'.

  68 | test("type expression raises a type error with not matching message", () => {
  69 |   expect<One>().type.not.toRaiseError("requires type argument");
> 70 |   expect<One>().type.toRaiseError("requires type argument");
     |                      ^
  71 | });
  72 | 
  73 | test("expression raises a type error with expected code", () => {

       at ./__typetests__/toRaiseError.tst.ts:70:22 ❭ type expression raises a type error with not matching message

    The raised type error:

    Generic type 'One' requires 1 type argument(s). ts(2314)

      68 | test("type expression raises a type error with not matching message", () => {
      69 |   expect<One>().type.not.toRaiseError("requires type argument");
    > 70 |   expect<One>().type.toRaiseError("requires type argument");
         |          ^
      71 | });
      72 | 
      73 | test("expression raises a type error with expected code", () => {

           at ./__typetests__/toRaiseError.tst.ts:70:10

Error: Expression raised a type error with code 2554.

  73 | test("expression raises a type error with expected code", () => {
  74 |   expect(one("pass")).type.toRaiseError(2554);
> 75 |   expect(one("fail")).type.not.toRaiseError(2554);
     |                                ^
  76 | });
  77 | 
  78 | test("expression raises a type error with not expected code", () => {

       at ./__typetests__/toRaiseError.tst.ts:75:32 ❭ expression raises a type error with expected code

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      73 | test("expression raises a type error with expected code", () => {
      74 |   expect(one("pass")).type.toRaiseError(2554);
    > 75 |   expect(one("fail")).type.not.toRaiseError(2554);
         |              ^
      76 | });
      77 | 
      78 | test("expression raises a type error with not expected code", () => {

           at ./__typetests__/toRaiseError.tst.ts:75:14

Error: Expression did not raise a type error with code 2544.

  78 | test("expression raises a type error with not expected code", () => {
  79 |   expect(one("pass")).type.not.toRaiseError(2544);
> 80 |   expect(one("fail")).type.toRaiseError(2544);
     |                            ^
  81 | });
  82 | 
  83 | declare function two<T>(): void;

       at ./__typetests__/toRaiseError.tst.ts:80:28 ❭ expression raises a type error with not expected code

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      78 | test("expression raises a type error with not expected code", () => {
      79 |   expect(one("pass")).type.not.toRaiseError(2544);
    > 80 |   expect(one("fail")).type.toRaiseError(2544);
         |              ^
      81 | });
      82 | 
      83 | declare function two<T>(): void;

           at ./__typetests__/toRaiseError.tst.ts:80:14

Error: Expression raised a type error matching substring 'Argument of type 'number' is not assignable to parameter of type 'string''.

   96 |     two(1000);
   97 |     two<string>("fail");
>  98 |   }).type.not.toRaiseError(
      |               ^
   99 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
  100 |     "Expected 0 arguments",
  101 |   );

        at ./__typetests__/toRaiseError.tst.ts:98:15 ❭ expression raises multiple type errors with matching messages

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      94 | 
      95 |   expect(() => {
    > 96 |     two(1000);
         |         ^
      97 |     two<string>("fail");
      98 |   }).type.not.toRaiseError(
      99 |     "Argument of type 'number' is not assignable to parameter of type 'string'",

           at ./__typetests__/toRaiseError.tst.ts:96:9

Error: Expression raised a type error matching substring 'Expected 0 arguments'.

   96 |     two(1000);
   97 |     two<string>("fail");
>  98 |   }).type.not.toRaiseError(
      |               ^
   99 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
  100 |     "Expected 0 arguments",
  101 |   );

        at ./__typetests__/toRaiseError.tst.ts:98:15 ❭ expression raises multiple type errors with matching messages

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

       95 |   expect(() => {
       96 |     two(1000);
    >  97 |     two<string>("fail");
          |                 ^
       98 |   }).type.not.toRaiseError(
       99 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
      100 |     "Expected 0 arguments",

            at ./__typetests__/toRaiseError.tst.ts:97:17

Error: Expression did not raise a type error matching substring 'Expected 0 arguments'.

  114 |     two(1000);
  115 |     two<string>("fail");
> 116 |   }).type.toRaiseError(
      |           ^
  117 |     "Expected 0 arguments",
  118 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
  119 |   );

        at ./__typetests__/toRaiseError.tst.ts:116:11 ❭ expression raises multiple type errors with not matching messages

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      112 | 
      113 |   expect(() => {
    > 114 |     two(1000);
          |         ^
      115 |     two<string>("fail");
      116 |   }).type.toRaiseError(
      117 |     "Expected 0 arguments",

            at ./__typetests__/toRaiseError.tst.ts:114:9

Error: Expression did not raise a type error matching substring 'Argument of type 'number' is not assignable to parameter of type 'string''.

  114 |     two(1000);
  115 |     two<string>("fail");
> 116 |   }).type.toRaiseError(
      |           ^
  117 |     "Expected 0 arguments",
  118 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
  119 |   );

        at ./__typetests__/toRaiseError.tst.ts:116:11 ❭ expression raises multiple type errors with not matching messages

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      113 |   expect(() => {
      114 |     two(1000);
    > 115 |     two<string>("fail");
          |                 ^
      116 |   }).type.toRaiseError(
      117 |     "Expected 0 arguments",
      118 |     "Argument of type 'number' is not assignable to parameter of type 'string'",

            at ./__typetests__/toRaiseError.tst.ts:115:17

Error: Expression raised a type error with code 2345.

  129 |     two(1000);
  130 |     two<string>("fail");
> 131 |   }).type.not.toRaiseError(2345, 2554);
      |               ^
  132 | });
  133 | 
  134 | test("expression raises multiple type errors with not expected codes", () => {

        at ./__typetests__/toRaiseError.tst.ts:131:15 ❭ expression raises multiple type errors with expected codes

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      127 | 
      128 |   expect(() => {
    > 129 |     two(1000);
          |         ^
      130 |     two<string>("fail");
      131 |   }).type.not.toRaiseError(2345, 2554);
      132 | });

            at ./__typetests__/toRaiseError.tst.ts:129:9

Error: Expression raised a type error with code 2554.

  129 |     two(1000);
  130 |     two<string>("fail");
> 131 |   }).type.not.toRaiseError(2345, 2554);
      |               ^
  132 | });
  133 | 
  134 | test("expression raises multiple type errors with not expected codes", () => {

        at ./__typetests__/toRaiseError.tst.ts:131:15 ❭ expression raises multiple type errors with expected codes

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      128 |   expect(() => {
      129 |     two(1000);
    > 130 |     two<string>("fail");
          |                 ^
      131 |   }).type.not.toRaiseError(2345, 2554);
      132 | });
      133 | 

            at ./__typetests__/toRaiseError.tst.ts:130:17

Error: Expression did not raise a type error with code 2554.

  136 |     two(1111);
  137 |     two<string>("pass");
> 138 |   }).type.toRaiseError(2554, 2345);
      |           ^
  139 | 
  140 |   expect(() => {
  141 |     two(1000);

        at ./__typetests__/toRaiseError.tst.ts:138:11 ❭ expression raises multiple type errors with not expected codes

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      134 | test("expression raises multiple type errors with not expected codes", () => {
      135 |   expect(() => {
    > 136 |     two(1111);
          |         ^
      137 |     two<string>("pass");
      138 |   }).type.toRaiseError(2554, 2345);
      139 | 

            at ./__typetests__/toRaiseError.tst.ts:136:9

Error: Expression did not raise a type error with code 2345.

  136 |     two(1111);
  137 |     two<string>("pass");
> 138 |   }).type.toRaiseError(2554, 2345);
      |           ^
  139 | 
  140 |   expect(() => {
  141 |     two(1000);

        at ./__typetests__/toRaiseError.tst.ts:138:11 ❭ expression raises multiple type errors with not expected codes

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      135 |   expect(() => {
      136 |     two(1111);
    > 137 |     two<string>("pass");
          |                 ^
      138 |   }).type.toRaiseError(2554, 2345);
      139 | 
      140 |   expect(() => {

            at ./__typetests__/toRaiseError.tst.ts:137:17

Error: Expression raised a type error matching substring 'Argument of type 'number' is not assignable to parameter of type 'string''.

  153 |     two(1000);
  154 |     two<string>("fail");
> 155 |   }).type.not.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'", 2554);
      |               ^
  156 | });
  157 | 
  158 | test("expression raises multiple type errors with not matching messages and not expected codes", () => {

        at ./__typetests__/toRaiseError.tst.ts:155:15 ❭ expression raises multiple type errors with matching messages and expected codes

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      151 | 
      152 |   expect(() => {
    > 153 |     two(1000);
          |         ^
      154 |     two<string>("fail");
      155 |   }).type.not.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'", 2554);
      156 | });

            at ./__typetests__/toRaiseError.tst.ts:153:9

Error: Expression raised a type error with code 2554.

  153 |     two(1000);
  154 |     two<string>("fail");
> 155 |   }).type.not.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'", 2554);
      |               ^
  156 | });
  157 | 
  158 | test("expression raises multiple type errors with not matching messages and not expected codes", () => {

        at ./__typetests__/toRaiseError.tst.ts:155:15 ❭ expression raises multiple type errors with matching messages and expected codes

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      152 |   expect(() => {
      153 |     two(1000);
    > 154 |     two<string>("fail");
          |                 ^
      155 |   }).type.not.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'", 2554);
      156 | });
      157 | 

            at ./__typetests__/toRaiseError.tst.ts:154:17

Error: Expression did not raise a type error with code 2554.

  160 |     two(1111);
  161 |     two<string>("pass");
> 162 |   }).type.toRaiseError(2554, "Argument of type 'number' is not assignable to parameter of type 'string'");
      |           ^
  163 | 
  164 |   expect(() => {
  165 |     two(1000);

        at ./__typetests__/toRaiseError.tst.ts:162:11 ❭ expression raises multiple type errors with not matching messages and not expected codes

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      158 | test("expression raises multiple type errors with not matching messages and not expected codes", () => {
      159 |   expect(() => {
    > 160 |     two(1111);
          |         ^
      161 |     two<string>("pass");
      162 |   }).type.toRaiseError(2554, "Argument of type 'number' is not assignable to parameter of type 'string'");
      163 | 

            at ./__typetests__/toRaiseError.tst.ts:160:9

Error: Expression did not raise a type error matching substring 'Argument of type 'number' is not assignable to parameter of type 'string''.

  160 |     two(1111);
  161 |     two<string>("pass");
> 162 |   }).type.toRaiseError(2554, "Argument of type 'number' is not assignable to parameter of type 'string'");
      |           ^
  163 | 
  164 |   expect(() => {
  165 |     two(1000);

        at ./__typetests__/toRaiseError.tst.ts:162:11 ❭ expression raises multiple type errors with not matching messages and not expected codes

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      159 |   expect(() => {
      160 |     two(1111);
    > 161 |     two<string>("pass");
          |                 ^
      162 |   }).type.toRaiseError(2554, "Argument of type 'number' is not assignable to parameter of type 'string'");
      163 | 
      164 |   expect(() => {

            at ./__typetests__/toRaiseError.tst.ts:161:17

Error: Expected only 1 type error, but 2 were raised.

  172 |     two(1111);
  173 |     two<string>("pass");
> 174 |   }).type.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'");
      |           ^
  175 | });
  176 | 
  177 | test("expression raises more type errors than expected codes", () => {

        at ./__typetests__/toRaiseError.tst.ts:174:11 ❭ expression raises more type errors than expected messages

    The raised type errors:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      170 | test("expression raises more type errors than expected messages", () => {
      171 |   expect(() => {
    > 172 |     two(1111);
          |         ^
      173 |     two<string>("pass");
      174 |   }).type.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'");
      175 | });

            at ./__typetests__/toRaiseError.tst.ts:172:9

    Expected 0 arguments, but got 1. ts(2554)

      171 |   expect(() => {
      172 |     two(1111);
    > 173 |     two<string>("pass");
          |                 ^
      174 |   }).type.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'");
      175 | });
      176 | 

            at ./__typetests__/toRaiseError.tst.ts:173:17

Error: Expected only 1 type error, but 2 were raised.

  179 |     two(1111);
  180 |     two<string>("pass");
> 181 |   }).type.toRaiseError(2345);
      |           ^
  182 | });
  183 | 
  184 | test("expression raises only one type error, but several messages are expected", () => {

        at ./__typetests__/toRaiseError.tst.ts:181:11 ❭ expression raises more type errors than expected codes

    The raised type errors:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      177 | test("expression raises more type errors than expected codes", () => {
      178 |   expect(() => {
    > 179 |     two(1111);
          |         ^
      180 |     two<string>("pass");
      181 |   }).type.toRaiseError(2345);
      182 | });

            at ./__typetests__/toRaiseError.tst.ts:179:9

    Expected 0 arguments, but got 1. ts(2554)

      178 |   expect(() => {
      179 |     two(1111);
    > 180 |     two<string>("pass");
          |                 ^
      181 |   }).type.toRaiseError(2345);
      182 | });
      183 | 

            at ./__typetests__/toRaiseError.tst.ts:180:17

Error: Expected 3 type errors, but only 1 was raised.

  185 |   expect(() => {
  186 |     two(1111);
> 187 |   }).type.toRaiseError(
      |           ^
  188 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
  189 |     "Expected 0 arguments",
  190 |     "Expected 2 arguments",

        at ./__typetests__/toRaiseError.tst.ts:187:11 ❭ expression raises only one type error, but several messages are expected

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      184 | test("expression raises only one type error, but several messages are expected", () => {
      185 |   expect(() => {
    > 186 |     two(1111);
          |         ^
      187 |   }).type.toRaiseError(
      188 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
      189 |     "Expected 0 arguments",

            at ./__typetests__/toRaiseError.tst.ts:186:9

Error: Expected 3 type errors, but only 2 were raised.

  196 |     two(1111);
  197 |     two<string>("pass");
> 198 |   }).type.toRaiseError(
      |           ^
  199 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
  200 |     "Expected 0 arguments",
  201 |     "Expected 2 arguments",

        at ./__typetests__/toRaiseError.tst.ts:198:11 ❭ expression raises less type errors than expected messages

    The raised type errors:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      194 | test("expression raises less type errors than expected messages", () => {
      195 |   expect(() => {
    > 196 |     two(1111);
          |         ^
      197 |     two<string>("pass");
      198 |   }).type.toRaiseError(
      199 |     "Argument of type 'number' is not assignable to parameter of type 'string'",

            at ./__typetests__/toRaiseError.tst.ts:196:9

    Expected 0 arguments, but got 1. ts(2554)

      195 |   expect(() => {
      196 |     two(1111);
    > 197 |     two<string>("pass");
          |                 ^
      198 |   }).type.toRaiseError(
      199 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
      200 |     "Expected 0 arguments",

            at ./__typetests__/toRaiseError.tst.ts:197:17

Error: Expected 3 type errors, but only 1 was raised.

  206 |   expect(() => {
  207 |     two<string>("pass");
> 208 |   }).type.toRaiseError(2345, 2554, 2554);
      |           ^
  209 | });
  210 | 
  211 | test("expression raises less type errors than expected codes", () => {

        at ./__typetests__/toRaiseError.tst.ts:208:11 ❭ expression raises only one type error, but several codes are expected

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      205 | test("expression raises only one type error, but several codes are expected", () => {
      206 |   expect(() => {
    > 207 |     two<string>("pass");
          |                 ^
      208 |   }).type.toRaiseError(2345, 2554, 2554);
      209 | });
      210 | 

            at ./__typetests__/toRaiseError.tst.ts:207:17

Error: Expected 3 type errors, but only 2 were raised.

  213 |     two(1111);
  214 |     two<string>("pass");
> 215 |   }).type.toRaiseError(2345, 2554, 2554);
      |           ^
  216 | });
  217 | 

        at ./__typetests__/toRaiseError.tst.ts:215:11 ❭ expression raises less type errors than expected codes

    The raised type errors:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      211 | test("expression raises less type errors than expected codes", () => {
      212 |   expect(() => {
    > 213 |     two(1111);
          |         ^
      214 |     two<string>("pass");
      215 |   }).type.toRaiseError(2345, 2554, 2554);
      216 | });

            at ./__typetests__/toRaiseError.tst.ts:213:9

    Expected 0 arguments, but got 1. ts(2554)

      212 |   expect(() => {
      213 |     two(1111);
    > 214 |     two<string>("pass");
          |                 ^
      215 |   }).type.toRaiseError(2345, 2554, 2554);
      216 | });
      217 | 

            at ./__typetests__/toRaiseError.tst.ts:214:17

