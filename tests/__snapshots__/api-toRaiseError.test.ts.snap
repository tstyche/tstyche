// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`toRaiseError: stderr 1`] = `
"Error: Expression raised a type error.

  11 | test("expression raises a type error", () => {
  12 |   expect(one("pass")).type.toRaiseError();
> 13 |   expect(one("fail")).type.not.toRaiseError();
     |                                ^
  14 | });
  15 | 
  16 | test("expression does not raise a type error", () => {

       at ./__typetests__/toRaiseError.test.ts:13:32 ❭ expression raises a type error

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      11 | test("expression raises a type error", () => {
      12 |   expect(one("pass")).type.toRaiseError();
    > 13 |   expect(one("fail")).type.not.toRaiseError();
         |              ^
      14 | });
      15 | 
      16 | test("expression does not raise a type error", () => {

           at ./__typetests__/toRaiseError.test.ts:13:14

Error: Expression did not raise a type error.

  16 | test("expression does not raise a type error", () => {
  17 |   expect(one()).type.not.toRaiseError();
> 18 |   expect(one()).type.toRaiseError();
     |                      ^
  19 | });
  20 | 
  21 | test("type definition raises a type error", () => {

       at ./__typetests__/toRaiseError.test.ts:18:22 ❭ expression does not raise a type error

Error: Type definition raised a type error.

  21 | test("type definition raises a type error", () => {
  22 |   expect<One>().type.toRaiseError();
> 23 |   expect<One>().type.not.toRaiseError();
     |                          ^
  24 | });
  25 | 
  26 | test("type definition does not raise a type error", () => {

       at ./__typetests__/toRaiseError.test.ts:23:26 ❭ type definition raises a type error

    The raised type error:

    Generic type 'One' requires 1 type argument(s). ts(2314)

      21 | test("type definition raises a type error", () => {
      22 |   expect<One>().type.toRaiseError();
    > 23 |   expect<One>().type.not.toRaiseError();
         |          ^
      24 | });
      25 | 
      26 | test("type definition does not raise a type error", () => {

           at ./__typetests__/toRaiseError.test.ts:23:10

Error: Type definition did not raise a type error.

  26 | test("type definition does not raise a type error", () => {
  27 |   expect<One<string>>().type.not.toRaiseError();
> 28 |   expect<One<string>>().type.toRaiseError();
     |                              ^
  29 | });
  30 | 
  31 | test("expression raises multiple type errors", () => {

       at ./__typetests__/toRaiseError.test.ts:28:30 ❭ type definition does not raise a type error

Error: Expression raised 3 type errors.

  39 |     one("2");
  40 |     one("3");
> 41 |   }).type.not.toRaiseError();
     |               ^
  42 | });
  43 | 
  44 | test("expression raises a type error with matching message", () => {

       at ./__typetests__/toRaiseError.test.ts:41:15 ❭ expression raises multiple type errors

    The raised type errors:

    Expected 0 arguments, but got 1. ts(2554)

      36 |   }).type.toRaiseError();
      37 |   expect(() => {
    > 38 |     one("1");
         |         ^
      39 |     one("2");
      40 |     one("3");
      41 |   }).type.not.toRaiseError();

           at ./__typetests__/toRaiseError.test.ts:38:9

    Expected 0 arguments, but got 1. ts(2554)

      37 |   expect(() => {
      38 |     one("1");
    > 39 |     one("2");
         |         ^
      40 |     one("3");
      41 |   }).type.not.toRaiseError();
      42 | });

           at ./__typetests__/toRaiseError.test.ts:39:9

    Expected 0 arguments, but got 1. ts(2554)

      38 |     one("1");
      39 |     one("2");
    > 40 |     one("3");
         |         ^
      41 |   }).type.not.toRaiseError();
      42 | });
      43 | 

           at ./__typetests__/toRaiseError.test.ts:40:9

Error: Expression raised a type error matching substring 'Expected 0 arguments'.

  44 | test("expression raises a type error with matching message", () => {
  45 |   expect(one("pass")).type.toRaiseError("Expected 0 arguments");
> 46 |   expect(one("fail")).type.not.toRaiseError("Expected 0 arguments");
     |                                ^
  47 | });
  48 | 
  49 | test("expression raises a type error with matching message passed as a template literal", () => {

       at ./__typetests__/toRaiseError.test.ts:46:32 ❭ expression raises a type error with matching message

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      44 | test("expression raises a type error with matching message", () => {
      45 |   expect(one("pass")).type.toRaiseError("Expected 0 arguments");
    > 46 |   expect(one("fail")).type.not.toRaiseError("Expected 0 arguments");
         |              ^
      47 | });
      48 | 
      49 | test("expression raises a type error with matching message passed as a template literal", () => {

           at ./__typetests__/toRaiseError.test.ts:46:14

Error: Expression raised a type error matching substring 'Expected 0 arguments'.

  49 | test("expression raises a type error with matching message passed as a template literal", () => {
  50 |   expect(one("pass")).type.toRaiseError(\`Expected 0 arguments\`);
> 51 |   expect(one("fail")).type.not.toRaiseError(\`Expected 0 arguments\`);
     |                                ^
  52 | });
  53 | 
  54 | test("expression raises type error with not matching message", () => {

       at ./__typetests__/toRaiseError.test.ts:51:32 ❭ expression raises a type error with matching message passed as a template literal

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      49 | test("expression raises a type error with matching message passed as a template literal", () => {
      50 |   expect(one("pass")).type.toRaiseError(\`Expected 0 arguments\`);
    > 51 |   expect(one("fail")).type.not.toRaiseError(\`Expected 0 arguments\`);
         |              ^
      52 | });
      53 | 
      54 | test("expression raises type error with not matching message", () => {

           at ./__typetests__/toRaiseError.test.ts:51:14

Error: Expression did not raise a type error matching substring 'Expected 2 arguments'.

  54 | test("expression raises type error with not matching message", () => {
  55 |   expect(one("pass")).type.not.toRaiseError("Expected 2 arguments");
> 56 |   expect(one("fail")).type.toRaiseError("Expected 2 arguments");
     |                            ^
  57 | });
  58 | 
  59 | test("type definition raises a type error with matching message", () => {

       at ./__typetests__/toRaiseError.test.ts:56:28 ❭ expression raises type error with not matching message

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      54 | test("expression raises type error with not matching message", () => {
      55 |   expect(one("pass")).type.not.toRaiseError("Expected 2 arguments");
    > 56 |   expect(one("fail")).type.toRaiseError("Expected 2 arguments");
         |              ^
      57 | });
      58 | 
      59 | test("type definition raises a type error with matching message", () => {

           at ./__typetests__/toRaiseError.test.ts:56:14

Error: Type definition raised a type error matching substring 'requires 1 type argument'.

  59 | test("type definition raises a type error with matching message", () => {
  60 |   expect<One>().type.toRaiseError("requires 1 type argument");
> 61 |   expect<One>().type.not.toRaiseError("requires 1 type argument");
     |                          ^
  62 | });
  63 | 
  64 | test("type definition raises a type error with matching message passed as a template literal", () => {

       at ./__typetests__/toRaiseError.test.ts:61:26 ❭ type definition raises a type error with matching message

    The raised type error:

    Generic type 'One' requires 1 type argument(s). ts(2314)

      59 | test("type definition raises a type error with matching message", () => {
      60 |   expect<One>().type.toRaiseError("requires 1 type argument");
    > 61 |   expect<One>().type.not.toRaiseError("requires 1 type argument");
         |          ^
      62 | });
      63 | 
      64 | test("type definition raises a type error with matching message passed as a template literal", () => {

           at ./__typetests__/toRaiseError.test.ts:61:10

Error: Type definition raised a type error matching substring 'requires 1 type argument'.

  64 | test("type definition raises a type error with matching message passed as a template literal", () => {
  65 |   expect<One>().type.toRaiseError(\`requires 1 type argument\`);
> 66 |   expect<One>().type.not.toRaiseError(\`requires 1 type argument\`);
     |                          ^
  67 | });
  68 | 
  69 | test("type definition raises a type error with not matching message", () => {

       at ./__typetests__/toRaiseError.test.ts:66:26 ❭ type definition raises a type error with matching message passed as a template literal

    The raised type error:

    Generic type 'One' requires 1 type argument(s). ts(2314)

      64 | test("type definition raises a type error with matching message passed as a template literal", () => {
      65 |   expect<One>().type.toRaiseError(\`requires 1 type argument\`);
    > 66 |   expect<One>().type.not.toRaiseError(\`requires 1 type argument\`);
         |          ^
      67 | });
      68 | 
      69 | test("type definition raises a type error with not matching message", () => {

           at ./__typetests__/toRaiseError.test.ts:66:10

Error: Type definition did not raise a type error matching substring 'requires type argument'.

  69 | test("type definition raises a type error with not matching message", () => {
  70 |   expect<One>().type.not.toRaiseError("requires type argument");
> 71 |   expect<One>().type.toRaiseError("requires type argument");
     |                      ^
  72 | });
  73 | 
  74 | test("expression raises a type error with expected code", () => {

       at ./__typetests__/toRaiseError.test.ts:71:22 ❭ type definition raises a type error with not matching message

    The raised type error:

    Generic type 'One' requires 1 type argument(s). ts(2314)

      69 | test("type definition raises a type error with not matching message", () => {
      70 |   expect<One>().type.not.toRaiseError("requires type argument");
    > 71 |   expect<One>().type.toRaiseError("requires type argument");
         |          ^
      72 | });
      73 | 
      74 | test("expression raises a type error with expected code", () => {

           at ./__typetests__/toRaiseError.test.ts:71:10

Error: Expression raised a type error with code 2554.

  74 | test("expression raises a type error with expected code", () => {
  75 |   expect(one("pass")).type.toRaiseError(2554);
> 76 |   expect(one("fail")).type.not.toRaiseError(2554);
     |                                ^
  77 | });
  78 | 
  79 | test("expression raises a type error with not expected code", () => {

       at ./__typetests__/toRaiseError.test.ts:76:32 ❭ expression raises a type error with expected code

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      74 | test("expression raises a type error with expected code", () => {
      75 |   expect(one("pass")).type.toRaiseError(2554);
    > 76 |   expect(one("fail")).type.not.toRaiseError(2554);
         |              ^
      77 | });
      78 | 
      79 | test("expression raises a type error with not expected code", () => {

           at ./__typetests__/toRaiseError.test.ts:76:14

Error: Expression did not raise a type error with code 2544.

  79 | test("expression raises a type error with not expected code", () => {
  80 |   expect(one("pass")).type.not.toRaiseError(2544);
> 81 |   expect(one("fail")).type.toRaiseError(2544);
     |                            ^
  82 | });
  83 | 
  84 | declare function two<T>(): void;

       at ./__typetests__/toRaiseError.test.ts:81:28 ❭ expression raises a type error with not expected code

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      79 | test("expression raises a type error with not expected code", () => {
      80 |   expect(one("pass")).type.not.toRaiseError(2544);
    > 81 |   expect(one("fail")).type.toRaiseError(2544);
         |              ^
      82 | });
      83 | 
      84 | declare function two<T>(): void;

           at ./__typetests__/toRaiseError.test.ts:81:14

Error: Expression raised a type error matching substring 'Argument of type 'number' is not assignable to parameter of type 'string''.

   97 |     two(1000);
   98 |     two<string>("fail");
>  99 |   }).type.not.toRaiseError(
      |               ^
  100 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
  101 |     "Expected 0 arguments",
  102 |   );

        at ./__typetests__/toRaiseError.test.ts:99:15 ❭ expression raises multiple type errors with matching messages

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

       95 | 
       96 |   expect(() => {
    >  97 |     two(1000);
          |         ^
       98 |     two<string>("fail");
       99 |   }).type.not.toRaiseError(
      100 |     "Argument of type 'number' is not assignable to parameter of type 'string'",

            at ./__typetests__/toRaiseError.test.ts:97:9

Error: Expression raised a type error matching substring 'Expected 0 arguments'.

   97 |     two(1000);
   98 |     two<string>("fail");
>  99 |   }).type.not.toRaiseError(
      |               ^
  100 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
  101 |     "Expected 0 arguments",
  102 |   );

        at ./__typetests__/toRaiseError.test.ts:99:15 ❭ expression raises multiple type errors with matching messages

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

       96 |   expect(() => {
       97 |     two(1000);
    >  98 |     two<string>("fail");
          |                 ^
       99 |   }).type.not.toRaiseError(
      100 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
      101 |     "Expected 0 arguments",

            at ./__typetests__/toRaiseError.test.ts:98:17

Error: Expression did not raise a type error matching substring 'Expected 0 arguments'.

  115 |     two(1000);
  116 |     two<string>("fail");
> 117 |   }).type.toRaiseError(
      |           ^
  118 |     "Expected 0 arguments",
  119 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
  120 |   );

        at ./__typetests__/toRaiseError.test.ts:117:11 ❭ expression raises multiple type errors with not matching messages

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      113 | 
      114 |   expect(() => {
    > 115 |     two(1000);
          |         ^
      116 |     two<string>("fail");
      117 |   }).type.toRaiseError(
      118 |     "Expected 0 arguments",

            at ./__typetests__/toRaiseError.test.ts:115:9

Error: Expression did not raise a type error matching substring 'Argument of type 'number' is not assignable to parameter of type 'string''.

  115 |     two(1000);
  116 |     two<string>("fail");
> 117 |   }).type.toRaiseError(
      |           ^
  118 |     "Expected 0 arguments",
  119 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
  120 |   );

        at ./__typetests__/toRaiseError.test.ts:117:11 ❭ expression raises multiple type errors with not matching messages

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      114 |   expect(() => {
      115 |     two(1000);
    > 116 |     two<string>("fail");
          |                 ^
      117 |   }).type.toRaiseError(
      118 |     "Expected 0 arguments",
      119 |     "Argument of type 'number' is not assignable to parameter of type 'string'",

            at ./__typetests__/toRaiseError.test.ts:116:17

Error: Expression raised a type error with code 2345.

  130 |     two(1000);
  131 |     two<string>("fail");
> 132 |   }).type.not.toRaiseError(2345, 2554);
      |               ^
  133 | });
  134 | 
  135 | test("expression raises multiple type errors with not expected codes", () => {

        at ./__typetests__/toRaiseError.test.ts:132:15 ❭ expression raises multiple type errors with expected codes

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      128 | 
      129 |   expect(() => {
    > 130 |     two(1000);
          |         ^
      131 |     two<string>("fail");
      132 |   }).type.not.toRaiseError(2345, 2554);
      133 | });

            at ./__typetests__/toRaiseError.test.ts:130:9

Error: Expression raised a type error with code 2554.

  130 |     two(1000);
  131 |     two<string>("fail");
> 132 |   }).type.not.toRaiseError(2345, 2554);
      |               ^
  133 | });
  134 | 
  135 | test("expression raises multiple type errors with not expected codes", () => {

        at ./__typetests__/toRaiseError.test.ts:132:15 ❭ expression raises multiple type errors with expected codes

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      129 |   expect(() => {
      130 |     two(1000);
    > 131 |     two<string>("fail");
          |                 ^
      132 |   }).type.not.toRaiseError(2345, 2554);
      133 | });
      134 | 

            at ./__typetests__/toRaiseError.test.ts:131:17

Error: Expression did not raise a type error with code 2554.

  137 |     two(1111);
  138 |     two<string>("pass");
> 139 |   }).type.toRaiseError(2554, 2345);
      |           ^
  140 | 
  141 |   expect(() => {
  142 |     two(1000);

        at ./__typetests__/toRaiseError.test.ts:139:11 ❭ expression raises multiple type errors with not expected codes

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      135 | test("expression raises multiple type errors with not expected codes", () => {
      136 |   expect(() => {
    > 137 |     two(1111);
          |         ^
      138 |     two<string>("pass");
      139 |   }).type.toRaiseError(2554, 2345);
      140 | 

            at ./__typetests__/toRaiseError.test.ts:137:9

Error: Expression did not raise a type error with code 2345.

  137 |     two(1111);
  138 |     two<string>("pass");
> 139 |   }).type.toRaiseError(2554, 2345);
      |           ^
  140 | 
  141 |   expect(() => {
  142 |     two(1000);

        at ./__typetests__/toRaiseError.test.ts:139:11 ❭ expression raises multiple type errors with not expected codes

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      136 |   expect(() => {
      137 |     two(1111);
    > 138 |     two<string>("pass");
          |                 ^
      139 |   }).type.toRaiseError(2554, 2345);
      140 | 
      141 |   expect(() => {

            at ./__typetests__/toRaiseError.test.ts:138:17

Error: Expression raised a type error matching substring 'Argument of type 'number' is not assignable to parameter of type 'string''.

  154 |     two(1000);
  155 |     two<string>("fail");
> 156 |   }).type.not.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'", 2554);
      |               ^
  157 | });
  158 | 
  159 | test("expression raises multiple type errors with not matching messages and not expected codes", () => {

        at ./__typetests__/toRaiseError.test.ts:156:15 ❭ expression raises multiple type errors with matching messages and expected codes

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      152 | 
      153 |   expect(() => {
    > 154 |     two(1000);
          |         ^
      155 |     two<string>("fail");
      156 |   }).type.not.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'", 2554);
      157 | });

            at ./__typetests__/toRaiseError.test.ts:154:9

Error: Expression raised a type error with code 2554.

  154 |     two(1000);
  155 |     two<string>("fail");
> 156 |   }).type.not.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'", 2554);
      |               ^
  157 | });
  158 | 
  159 | test("expression raises multiple type errors with not matching messages and not expected codes", () => {

        at ./__typetests__/toRaiseError.test.ts:156:15 ❭ expression raises multiple type errors with matching messages and expected codes

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      153 |   expect(() => {
      154 |     two(1000);
    > 155 |     two<string>("fail");
          |                 ^
      156 |   }).type.not.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'", 2554);
      157 | });
      158 | 

            at ./__typetests__/toRaiseError.test.ts:155:17

Error: Expression did not raise a type error with code 2554.

  161 |     two(1111);
  162 |     two<string>("pass");
> 163 |   }).type.toRaiseError(2554, "Argument of type 'number' is not assignable to parameter of type 'string'");
      |           ^
  164 | 
  165 |   expect(() => {
  166 |     two(1000);

        at ./__typetests__/toRaiseError.test.ts:163:11 ❭ expression raises multiple type errors with not matching messages and not expected codes

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      159 | test("expression raises multiple type errors with not matching messages and not expected codes", () => {
      160 |   expect(() => {
    > 161 |     two(1111);
          |         ^
      162 |     two<string>("pass");
      163 |   }).type.toRaiseError(2554, "Argument of type 'number' is not assignable to parameter of type 'string'");
      164 | 

            at ./__typetests__/toRaiseError.test.ts:161:9

Error: Expression did not raise a type error matching substring 'Argument of type 'number' is not assignable to parameter of type 'string''.

  161 |     two(1111);
  162 |     two<string>("pass");
> 163 |   }).type.toRaiseError(2554, "Argument of type 'number' is not assignable to parameter of type 'string'");
      |           ^
  164 | 
  165 |   expect(() => {
  166 |     two(1000);

        at ./__typetests__/toRaiseError.test.ts:163:11 ❭ expression raises multiple type errors with not matching messages and not expected codes

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      160 |   expect(() => {
      161 |     two(1111);
    > 162 |     two<string>("pass");
          |                 ^
      163 |   }).type.toRaiseError(2554, "Argument of type 'number' is not assignable to parameter of type 'string'");
      164 | 
      165 |   expect(() => {

            at ./__typetests__/toRaiseError.test.ts:162:17

Error: Expected only 1 type error, but 2 were raised.

  173 |     two(1111);
  174 |     two<string>("pass");
> 175 |   }).type.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'");
      |           ^
  176 | });
  177 | 
  178 | test("expression raises more type errors than expected codes", () => {

        at ./__typetests__/toRaiseError.test.ts:175:11 ❭ expression raises more type errors than expected messages

    The raised type errors:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      171 | test("expression raises more type errors than expected messages", () => {
      172 |   expect(() => {
    > 173 |     two(1111);
          |         ^
      174 |     two<string>("pass");
      175 |   }).type.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'");
      176 | });

            at ./__typetests__/toRaiseError.test.ts:173:9

    Expected 0 arguments, but got 1. ts(2554)

      172 |   expect(() => {
      173 |     two(1111);
    > 174 |     two<string>("pass");
          |                 ^
      175 |   }).type.toRaiseError("Argument of type 'number' is not assignable to parameter of type 'string'");
      176 | });
      177 | 

            at ./__typetests__/toRaiseError.test.ts:174:17

Error: Expected only 1 type error, but 2 were raised.

  180 |     two(1111);
  181 |     two<string>("pass");
> 182 |   }).type.toRaiseError(2345);
      |           ^
  183 | });
  184 | 
  185 | test("expression raises only one type error, but several messages are expected", () => {

        at ./__typetests__/toRaiseError.test.ts:182:11 ❭ expression raises more type errors than expected codes

    The raised type errors:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      178 | test("expression raises more type errors than expected codes", () => {
      179 |   expect(() => {
    > 180 |     two(1111);
          |         ^
      181 |     two<string>("pass");
      182 |   }).type.toRaiseError(2345);
      183 | });

            at ./__typetests__/toRaiseError.test.ts:180:9

    Expected 0 arguments, but got 1. ts(2554)

      179 |   expect(() => {
      180 |     two(1111);
    > 181 |     two<string>("pass");
          |                 ^
      182 |   }).type.toRaiseError(2345);
      183 | });
      184 | 

            at ./__typetests__/toRaiseError.test.ts:181:17

Error: Expected 3 type errors, but only 1 was raised.

  186 |   expect(() => {
  187 |     two(1111);
> 188 |   }).type.toRaiseError(
      |           ^
  189 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
  190 |     "Expected 0 arguments",
  191 |     "Expected 2 arguments",

        at ./__typetests__/toRaiseError.test.ts:188:11 ❭ expression raises only one type error, but several messages are expected

    The raised type error:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      185 | test("expression raises only one type error, but several messages are expected", () => {
      186 |   expect(() => {
    > 187 |     two(1111);
          |         ^
      188 |   }).type.toRaiseError(
      189 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
      190 |     "Expected 0 arguments",

            at ./__typetests__/toRaiseError.test.ts:187:9

Error: Expected 3 type errors, but only 2 were raised.

  197 |     two(1111);
  198 |     two<string>("pass");
> 199 |   }).type.toRaiseError(
      |           ^
  200 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
  201 |     "Expected 0 arguments",
  202 |     "Expected 2 arguments",

        at ./__typetests__/toRaiseError.test.ts:199:11 ❭ expression raises less type errors than expected messages

    The raised type errors:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      195 | test("expression raises less type errors than expected messages", () => {
      196 |   expect(() => {
    > 197 |     two(1111);
          |         ^
      198 |     two<string>("pass");
      199 |   }).type.toRaiseError(
      200 |     "Argument of type 'number' is not assignable to parameter of type 'string'",

            at ./__typetests__/toRaiseError.test.ts:197:9

    Expected 0 arguments, but got 1. ts(2554)

      196 |   expect(() => {
      197 |     two(1111);
    > 198 |     two<string>("pass");
          |                 ^
      199 |   }).type.toRaiseError(
      200 |     "Argument of type 'number' is not assignable to parameter of type 'string'",
      201 |     "Expected 0 arguments",

            at ./__typetests__/toRaiseError.test.ts:198:17

Error: Expected 3 type errors, but only 1 was raised.

  207 |   expect(() => {
  208 |     two<string>("pass");
> 209 |   }).type.toRaiseError(2345, 2554, 2554);
      |           ^
  210 | });
  211 | 
  212 | test("expression raises less type errors than expected codes", () => {

        at ./__typetests__/toRaiseError.test.ts:209:11 ❭ expression raises only one type error, but several codes are expected

    The raised type error:

    Expected 0 arguments, but got 1. ts(2554)

      206 | test("expression raises only one type error, but several codes are expected", () => {
      207 |   expect(() => {
    > 208 |     two<string>("pass");
          |                 ^
      209 |   }).type.toRaiseError(2345, 2554, 2554);
      210 | });
      211 | 

            at ./__typetests__/toRaiseError.test.ts:208:17

Error: Expected 3 type errors, but only 2 were raised.

  214 |     two(1111);
  215 |     two<string>("pass");
> 216 |   }).type.toRaiseError(2345, 2554, 2554);
      |           ^
  217 | });
  218 | 

        at ./__typetests__/toRaiseError.test.ts:216:11 ❭ expression raises less type errors than expected codes

    The raised type errors:

    Argument of type 'number' is not assignable to parameter of type 'string'. ts(2345)

      212 | test("expression raises less type errors than expected codes", () => {
      213 |   expect(() => {
    > 214 |     two(1111);
          |         ^
      215 |     two<string>("pass");
      216 |   }).type.toRaiseError(2345, 2554, 2554);
      217 | });

            at ./__typetests__/toRaiseError.test.ts:214:9

    Expected 0 arguments, but got 1. ts(2554)

      213 |   expect(() => {
      214 |     two(1111);
    > 215 |     two<string>("pass");
          |                 ^
      216 |   }).type.toRaiseError(2345, 2554, 2554);
      217 | });
      218 | 

            at ./__typetests__/toRaiseError.test.ts:215:17

"
`;

exports[`toRaiseError: stdout 1`] = `
"uses TypeScript <<version>> with ./tsconfig.json

fail ./__typetests__/toRaiseError.test.ts
  × expression raises a type error
  × expression does not raise a type error
  × type definition raises a type error
  × type definition does not raise a type error
  × expression raises multiple type errors
  × expression raises a type error with matching message
  × expression raises a type error with matching message passed as a template literal
  × expression raises type error with not matching message
  × type definition raises a type error with matching message
  × type definition raises a type error with matching message passed as a template literal
  × type definition raises a type error with not matching message
  × expression raises a type error with expected code
  × expression raises a type error with not expected code
  × expression raises multiple type errors with matching messages
  × expression raises multiple type errors with not matching messages
  × expression raises multiple type errors with expected codes
  × expression raises multiple type errors with not expected codes
  × expression raises multiple type errors with matching messages and expected codes
  × expression raises multiple type errors with not matching messages and not expected codes
  × expression raises more type errors than expected messages
  × expression raises more type errors than expected codes
  × expression raises only one type error, but several messages are expected
  × expression raises less type errors than expected messages
  × expression raises only one type error, but several codes are expected
  × expression raises less type errors than expected codes

Targets:    1 failed, 1 total
Test files: 1 failed, 1 total
Tests:      25 failed, 25 total
Assertions: 25 failed, 19 passed, 44 total
Duration:   <<timestamp>>

Ran all test files.
"
`;
