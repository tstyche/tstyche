Warning: '.toBeAssignable()' is deprecated and will be removed in TSTyche 3.

To learn more, visit https://tstyche.org/guide/upgrade

   8 | describe("received type", () => {
   9 |   test("is assignable expected value?", () => {
> 10 |     expect<Names>().type.toBeAssignable({ first: "Rose" });
     |                          ^
  11 |     expect<Names>().type.toBeAssignable({ first: "Rose", last: "Smith" });
  12 |     expect<Names>().type.toBeAssignable({ first: "Rose", last: undefined });
  13 | 

       at ./__typetests__/toBeAssignable.tst.ts:10:26

Error: Type 'Names' is not assignable with type '{ middle: string; }'.

  12 |     expect<Names>().type.toBeAssignable({ first: "Rose", last: undefined });
  13 | 
> 14 |     expect<Names>().type.toBeAssignable({ middle: "O." });
     |                          ^
  15 |   });
  16 | 
  17 |   test("is NOT assignable expected value?", () => {

       at ./__typetests__/toBeAssignable.tst.ts:14:26 ❭ received type ❭ is assignable expected value?

Error: Type 'Names' is assignable with type '{ first: string; }'.

  18 |     expect<Names>().type.not.toBeAssignable({ middle: "O." });
  19 | 
> 20 |     expect<Names>().type.not.toBeAssignable({ first: "Rose" });
     |                              ^
  21 |   });
  22 | 
  23 |   test("is assignable expected type?", () => {

       at ./__typetests__/toBeAssignable.tst.ts:20:30 ❭ received type ❭ is NOT assignable expected value?

Error: Type 'Names' is not assignable with type '{ middle: string; }'.

  27 |     expect<Names>().type.toBeAssignable<{ first: string; last?: string }>();
  28 | 
> 29 |     expect<Names>().type.toBeAssignable<{ middle: string }>();
     |                          ^
  30 |   });
  31 | 
  32 |   test("is NOT assignable expected type?", () => {

       at ./__typetests__/toBeAssignable.tst.ts:29:26 ❭ received type ❭ is assignable expected type?

Error: Type 'Names' is assignable with type '{ first: string; }'.

  33 |     expect<Names>().type.not.toBeAssignable<{ middle: string }>();
  34 | 
> 35 |     expect<Names>().type.not.toBeAssignable<{ first: string }>();
     |                              ^
  36 |   });
  37 | });
  38 | 

       at ./__typetests__/toBeAssignable.tst.ts:35:30 ❭ received type ❭ is NOT assignable expected type?

Error: Type '{ first: string; last: string; }' is not assignable with type '{ middle: string; }'.

  44 |     });
  45 | 
> 46 |     expect({ first: "Jane", last: "Swan" }).type.toBeAssignable({
     |                                                  ^
  47 |       middle: "O.",
  48 |     });
  49 |   });

       at ./__typetests__/toBeAssignable.tst.ts:46:50 ❭ received value ❭ is assignable expected value?

Error: Type '{ first: string; }' is assignable with type '{ first: string; }'.

  54 |     });
  55 | 
> 56 |     expect({ first: "Jane" }).type.not.toBeAssignable({ first: "Rose" });
     |                                        ^
  57 |   });
  58 | 
  59 |   test("is assignable expected type?", () => {

       at ./__typetests__/toBeAssignable.tst.ts:56:40 ❭ received value ❭ is NOT assignable expected value?

Error: Type '{ first: string; last: string; }' is not assignable with type '{ middle: string; }'.

  63 |     }>();
  64 | 
> 65 |     expect({ first: "Jane", last: "Swan" }).type.toBeAssignable<{
     |                                                  ^
  66 |       middle: string;
  67 |     }>();
  68 |   });

       at ./__typetests__/toBeAssignable.tst.ts:65:50 ❭ received value ❭ is assignable expected type?

Error: Type '{ first: string; }' is assignable with type '{ first: string; }'.

  73 |     }>();
  74 | 
> 75 |     expect({ first: "Jane" }).type.not.toBeAssignable<{ first: string }>();
     |                                        ^
  76 |   });
  77 | });
  78 | 

       at ./__typetests__/toBeAssignable.tst.ts:75:40 ❭ received value ❭ is NOT assignable type?

