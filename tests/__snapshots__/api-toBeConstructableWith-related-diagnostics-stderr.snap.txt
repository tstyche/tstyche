Error: The diagnostic message did not match.

  18 | 
  19 | expect(Person).type.toBeConstructableWith({ name: "John", age: false });
  20 | // @ts-expect-error This directive must be visible
     |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  21 | new Person();
  22 | 

       at ./__typetests__/related-diagnostics.tst.ts:20:21

    The suppressed error:

    Expected 1 arguments, but got 0. ts(2554)

      19 | expect(Person).type.toBeConstructableWith({ name: "John", age: false });
      20 | // @ts-expect-error This directive must be visible
      21 | new Person();
         | ~~~~~~~~~~~~
      22 | 

           at ./__typetests__/related-diagnostics.tst.ts:21:1

        An argument for 'options' was not provided. ts(6210)

          12 | 
          13 | declare class Person {
          14 |   constructor(options: PersonOptions);
             |               ~~~~~~~~~~~~~~~~~~~~~~
          15 | }
          16 | 
          17 | expect(Person).type.toBeConstructableWith({ name: "Alice", age: 32 });

               at ./__typetests__/related-diagnostics.tst.ts:14:15

Error: Expression is not constructable with the given argument.

Type 'boolean' is not assignable to type 'number'.

  4 | expect(PersonExternal).type.toBeConstructableWith({ name: "Alice", age: 32 });
  5 | 
  6 | expect(PersonExternal).type.toBeConstructableWith({ name: "John", age: false });
    |                                                                   ~~~
  7 | 
  8 | interface PersonOptions {
  9 |   name: string;

      at ./__typetests__/related-diagnostics.tst.ts:6:67

    The expected type comes from property 'age' which is declared here on type 'PersonOptions' ts(6500)

      1 | export interface PersonOptions {
      2 |   name: string;
      3 |   age: number;
        |   ~~~
      4 | }
      5 | 
      6 | export declare class Person {

          at ./__typetests__/Person.ts:3:3

Error: Expression is not constructable with the given argument.

Type 'boolean' is not assignable to type 'number'.

  17 | expect(Person).type.toBeConstructableWith({ name: "Alice", age: 32 });
  18 | 
  19 | expect(Person).type.toBeConstructableWith({ name: "John", age: false });
     |                                                           ~~~
  20 | // @ts-expect-error This directive must be visible
  21 | new Person();
  22 | 

       at ./__typetests__/related-diagnostics.tst.ts:19:59

    The expected type comes from property 'age' which is declared here on type 'PersonOptions' ts(6500)

       8 | interface PersonOptions {
       9 |   name: string;
      10 |   age: number;
         |   ~~~
      11 | }
      12 | 
      13 | declare class Person {

           at ./__typetests__/related-diagnostics.tst.ts:10:3

